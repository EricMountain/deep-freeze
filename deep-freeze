#!/usr/bin/env bash

set -euo pipefail

# Exit code conventions: https://freedesktop.org/software/systemd/man/systemd.exec.html#Process%20Exit%20Codes

# https://stackoverflow.com/a/246128
this_script_dir=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)

dfb_dir="${HOME}/.deep-freeze-backups"
dfb_rc="${dfb_dir}/deep-freeze.rc"
[[ -d "${dfb_dir}" ]] || mkdir "${dfb_dir}"
[[ -e "${dfb_rc}" ]] && source "${dfb_rc}"

timestamp_last_run="${HOME}/.deep-freeze-backups/last_run"
touch "${timestamp_last_run}"

# Check we have Internet access
if ! ping -n -c 1 -q 1.1.1.1 >/dev/null 2>/dev/null; then
    echo Network unavailable, exiting 1>&2
    exit 69 # service unavailable
fi

# Check if we're on a known "metered" connection (e.g. WiFi tethering)
if [[ $(uname -o) == "Darwin" && -v disallowed_ssids[@] ]] ; then
    # Credit https://stackoverflow.com/a/4481019
    ssid=$(/System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -I | awk -F' SSID: '  '/ SSID: / {print $2}')
    for i in "${disallowed_ssids[@]}" ; do
        if [[ ${i} == ${ssid} ]] ; then
            echo Metered/low-data network \"${ssid}\", exiting 1>&2
            exit 69 # service unavailable
        fi
    done
fi

# Check last successful run was over 24h ago
timestamp_success="${HOME}/.deep-freeze-backups/last_successful_backup"
if [ -e "${timestamp_success}" ]; then
    timestamp=$(date -r "${timestamp_success}" +%s)
    now=$(date +%s)
    if [ $((now - timestamp)) -lt 86400 ]; then
        echo Last successful backup too recent, exiting 1>&2
        exit 75 # transient error
    fi
fi

"${this_script_dir}/deep-freeze.py"
touch "${timestamp_success}"
